/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UploadRouteImport } from './routes/upload'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as PhotosRouteImport } from './routes/photos'

const UploadRoute = UploadRouteImport.update({
  id: '/upload',
  path: '/upload',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const PhotosRoute = PhotosRouteImport.update({
  id: '/photos',
  path: '/photos',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/photos': typeof PhotosRoute
  '/profile': typeof ProfileRoute
  '/upload': typeof UploadRoute
}
export interface FileRoutesByTo {
  '/photos': typeof PhotosRoute
  '/profile': typeof ProfileRoute
  '/upload': typeof UploadRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/photos': typeof PhotosRoute
  '/profile': typeof ProfileRoute
  '/upload': typeof UploadRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/photos' | '/profile' | '/upload'
  fileRoutesByTo: FileRoutesByTo
  to: '/photos' | '/profile' | '/upload'
  id: '__root__' | '/photos' | '/profile' | '/upload'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  PhotosRoute: typeof PhotosRoute
  ProfileRoute: typeof ProfileRoute
  UploadRoute: typeof UploadRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/upload': {
      id: '/upload'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof UploadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/photos': {
      id: '/photos'
      path: '/photos'
      fullPath: '/photos'
      preLoaderRoute: typeof PhotosRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  PhotosRoute: PhotosRoute,
  ProfileRoute: ProfileRoute,
  UploadRoute: UploadRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
