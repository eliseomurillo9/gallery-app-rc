/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UploadRouteImport } from './routes/upload'
import { Route as GalleryRouteImport } from './routes/gallery'
import { Route as ProfileRouteRouteImport } from './routes/profile/route'
import { Route as ProfileSettingsRouteImport } from './routes/profile/settings'
import { Route as ProfileGalleryRouteImport } from './routes/profile/gallery'
import { Route as ProfileAlbumsRouteImport } from './routes/profile/albums'

const UploadRoute = UploadRouteImport.update({
  id: '/upload',
  path: '/upload',
  getParentRoute: () => rootRouteImport,
} as any)
const GalleryRoute = GalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRouteRoute = ProfileRouteRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileSettingsRoute = ProfileSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => ProfileRouteRoute,
} as any)
const ProfileGalleryRoute = ProfileGalleryRouteImport.update({
  id: '/gallery',
  path: '/gallery',
  getParentRoute: () => ProfileRouteRoute,
} as any)
const ProfileAlbumsRoute = ProfileAlbumsRouteImport.update({
  id: '/albums',
  path: '/albums',
  getParentRoute: () => ProfileRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/profile': typeof ProfileRouteRouteWithChildren
  '/gallery': typeof GalleryRoute
  '/upload': typeof UploadRoute
  '/profile/albums': typeof ProfileAlbumsRoute
  '/profile/gallery': typeof ProfileGalleryRoute
  '/profile/settings': typeof ProfileSettingsRoute
}
export interface FileRoutesByTo {
  '/profile': typeof ProfileRouteRouteWithChildren
  '/gallery': typeof GalleryRoute
  '/upload': typeof UploadRoute
  '/profile/albums': typeof ProfileAlbumsRoute
  '/profile/gallery': typeof ProfileGalleryRoute
  '/profile/settings': typeof ProfileSettingsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/profile': typeof ProfileRouteRouteWithChildren
  '/gallery': typeof GalleryRoute
  '/upload': typeof UploadRoute
  '/profile/albums': typeof ProfileAlbumsRoute
  '/profile/gallery': typeof ProfileGalleryRoute
  '/profile/settings': typeof ProfileSettingsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/profile'
    | '/gallery'
    | '/upload'
    | '/profile/albums'
    | '/profile/gallery'
    | '/profile/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/profile'
    | '/gallery'
    | '/upload'
    | '/profile/albums'
    | '/profile/gallery'
    | '/profile/settings'
  id:
    | '__root__'
    | '/profile'
    | '/gallery'
    | '/upload'
    | '/profile/albums'
    | '/profile/gallery'
    | '/profile/settings'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProfileRouteRoute: typeof ProfileRouteRouteWithChildren
  GalleryRoute: typeof GalleryRoute
  UploadRoute: typeof UploadRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/upload': {
      id: '/upload'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof UploadRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/gallery': {
      id: '/gallery'
      path: '/gallery'
      fullPath: '/gallery'
      preLoaderRoute: typeof GalleryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/settings': {
      id: '/profile/settings'
      path: '/settings'
      fullPath: '/profile/settings'
      preLoaderRoute: typeof ProfileSettingsRouteImport
      parentRoute: typeof ProfileRouteRoute
    }
    '/profile/gallery': {
      id: '/profile/gallery'
      path: '/gallery'
      fullPath: '/profile/gallery'
      preLoaderRoute: typeof ProfileGalleryRouteImport
      parentRoute: typeof ProfileRouteRoute
    }
    '/profile/albums': {
      id: '/profile/albums'
      path: '/albums'
      fullPath: '/profile/albums'
      preLoaderRoute: typeof ProfileAlbumsRouteImport
      parentRoute: typeof ProfileRouteRoute
    }
  }
}

interface ProfileRouteRouteChildren {
  ProfileAlbumsRoute: typeof ProfileAlbumsRoute
  ProfileGalleryRoute: typeof ProfileGalleryRoute
  ProfileSettingsRoute: typeof ProfileSettingsRoute
}

const ProfileRouteRouteChildren: ProfileRouteRouteChildren = {
  ProfileAlbumsRoute: ProfileAlbumsRoute,
  ProfileGalleryRoute: ProfileGalleryRoute,
  ProfileSettingsRoute: ProfileSettingsRoute,
}

const ProfileRouteRouteWithChildren = ProfileRouteRoute._addFileChildren(
  ProfileRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProfileRouteRoute: ProfileRouteRouteWithChildren,
  GalleryRoute: GalleryRoute,
  UploadRoute: UploadRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
